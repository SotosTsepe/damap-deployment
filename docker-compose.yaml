version: '3.3'

services:
  damap-be:
    build: ./damap-backend
    container_name: "damap-backend"
    restart: "unless-stopped"

  damap-db:
    build: ./docker/postgres/
    container_name: "damap-db"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_MULTIPLE_DATABASES: ${POSTGRES_MULTIPLE_DATABASES:-damap,keycloak}
    ports:
      - "5432:5432"
    volumes:
     - db-data:/var/lib/postgresql/data
    restart: "unless-stopped"
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 30s
      timeout: 15s
      retries: 5

  keycloak:
    image: jboss/keycloak
    container_name: "keycloak"
    environment:
      PROXY_ADDRESS_FORWARDING: "true"
      DB_VENDOR: POSTGRES
      DB_ADDR: damap-db
      # the DB_DATABASE has to match one of the values provided in the POSTGRES_MULTIPLE_DATABASES
      DB_DATABASE: ${KEYCLOAK_DB:-keycloak}
      DB_USER: ${KEYCLOAK_DB_USER:-keycloak}
      DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak}
      DB_SCHEMA: public
      KEYCLOAK_USER: ${KEYCLOAK_USER:-admin}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD:-admin}
      # comma separated paths of realm files to import
      KEYCLOAK_IMPORT: ${KEYCLOAK_IMPORT}
    ports:
      - "8087:8080"
    volumes:
      - ./docker/keycloak/import:/tmp/import
    restart: "unless-stopped"

  damap-fe:
    build:
      context: ./damap-frontend
    container_name: "damap-frontend"
    restart: "unless-stopped"

  api-mock:
    image: clue/json-server
    container_name: "mock-api"
    command: db.json --routes routes.json
    volumes:
      - ./docker/api-mock/data/db.json:/data/db.json
      - ./docker/api-mock/data/routes.json:/data/routes.json
    ports:
      - "8091:80"
    restart: "unless-stopped"

  nginx:
    image: registry.hub.docker.com/library/nginx
    container_name: "nginx"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    restart: "unless-stopped"

volumes:
  db-data:
